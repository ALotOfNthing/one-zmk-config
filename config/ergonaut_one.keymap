#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        set-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        soft_reset_right {
            bindings = <&sys_reset>;
            key-positions = <9 10 11 30>;
            timeout-ms = <5000>;
            layers = <0>;
        };

        soft_reset_left {
            bindings = <&sys_reset>;
            key-positions = <0 1 2 29>;
            timeout-ms = <5000>;
            layers = <0>;
        };

        hard_reset_right {
            bindings = <&bootloader>;
            key-positions = <8 9 10 11 30>;
            timeout-ms = <5000>;
            layers = <0>;
        };

        hard_reset_left {
            bindings = <&bootloader>;
            key-positions = <0 1 2 3 29>;
            layers = <0>;
            timeout-ms = <5000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E             &kp R      &kp T      &kp Y      &kp U            &kp I              &kp O    &kp P     &kp BACKSPACE
&kp LEFT_SHIFT    &kp A  &kp S  &kp D             &kp F      &kp G      &kp H      &kp J            &kp K              &kp L    &kp SEMI  &kp GLOBE
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C             &kp V      &kp B      &kp N      &kp M            &kp COMMA          &kp DOT  &kp FSLH  &kp RIGHT_ALT
                                &kp LEFT_COMMAND  &lt 1 TAB  &kp SPACE  &kp ENTER  &lt 2 BACKSPACE  &kp RIGHT_COMMAND
            >;
        };

        lower_layer {
            display-name = "NUM";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp PLUS      &kp KP_MULTIPLY  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERCENT  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp KP_MINUS  &kp KP_DIVIDE    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp HASH     &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp KP_EQUAL  &kp KP_DOT       &kp N7        &kp N8        &kp N9        &none        &trans
                         &trans   &trans   &trans        &trans           &trans        &trans
            >;
        };

        raise_layer {
            display-name = "SYM";
            bindings = <
&kp TILDE  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET       &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&trans     &none     &none        &none     &none       &none        &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW       &kp RIGHT_ARROW       &kp SEMICOLON          &kp APOSTROPHE
&trans     &none     &none        &none     &none       &none        &none           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
                                  &trans    &trans      &trans       &trans          &trans            &trans
            >;
        };

        setting_layer {
            display-name = "SET";
            bindings = <
&none  &none           &none       &none                 &kt C_MUTE            &none             &none  &none  &none         &none         &none         &none
&none  &kp C_PREVIOUS  &kp C_NEXT  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kt C_PLAY_PAUSE  &none  &none  &none         &none         &none         &none
&none  &none           &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &none  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR
                                   &none                 &none                 &none             &none  &none  &none
            >;
        };
    };
};
